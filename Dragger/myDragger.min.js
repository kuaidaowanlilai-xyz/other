/*
用法：
  let myDragger = new MyDragger()
  myDragger.dragger(整个要移动的dom节点, 被拖拽的dom节点)
注意：两个参数都需是 dom对象
*/
"use strict";function MyDragger(){this.draggerDivArr=[],this.zIndexArr=[]}MyDragger.prototype.dragger=function(e,t){var r,n,o,i,s=this;function d(t){e.style.left="".concat(t.clientX-r-o,"px"),e.style.top="".concat(t.clientY-n-i,"px")}this.draggerDivArr.push(e),this.zIndexArr.push(e.style.zIndex),draggerDivOpacity=e.style.opacity,htmlDiv=document.querySelector("html"),t.style.userSelect="none",e.addEventListener("mousedown",function(t){for(var r=0;r<s.draggerDivArr.length;r++)s.draggerDivArr[r].style.zIndex=s.zIndexArr[r];e.style.zIndex="2020"}),t.addEventListener("mousedown",function(t){r=t.offsetX,n=t.offsetY,o=e.parentNode.offsetLeft,i=e.parentNode.offsetTop,htmlDiv.addEventListener("mousemove",d),e.style.opacity=".8"}),t.addEventListener("mouseup",function(t){htmlDiv.removeEventListener("mousemove",d),e.style.opacity=draggerDivOpacity}),htmlDiv.addEventListener("mouseleave",function(e){htmlDiv.removeEventListener("mousemove",d)})};
